import html
from io import BytesIO
from typing import Optional, List

from telegram import Message, Update, Bot, User, Chat, ParseMode
from telegram.error import BadRequest, TelegramError
from telegram.ext import run_async, CommandHandler, MessageHandler, Filters
from telegram.utils.helpers import mention_html

import tg_bot.modules.sql.global_bans_sql as sql
from tg_bot import dispatcher, OWNER_ID, SUDO_USERS, SUPPORT_USERS, STRICT_GBAN
from tg_bot.modules.helper_funcs.chat_status import user_admin, is_user_admin
from tg_bot.modules.helper_funcs.extraction import extract_user, extract_user_and_text
from tg_bot.modules.helper_funcs.filters import CustomFilters
from tg_bot.modules.helper_funcs.misc import send_to_list
from tg_bot.modules.sql.users_sql import get_all_chats

GBAN_ENFORCE_GROUP = 6

GBAN_ERRORS = {
    "‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∑í ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑í",
    "‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫",
    "‡∂†‡∑ê‡∂ß‡∑ä ‡∑É‡∑è‡∂∏‡∑è‡∂¢‡∑í‡∂ö‡∂∫‡∑è‡∑Ä ‡∑É‡∑ì‡∂∏‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß / ‡∑É‡∑ì‡∂∏‡∑è ‡∂±‡∑ú‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂¥‡∑ä‚Äç‡∂ª‡∂∏‡∑è‡∂´‡∑Ä‡∂≠‡∑ä ‡∂Ö‡∂∫‡∑í‡∂≠‡∑í‡∑Ä‡∑è‡∑É‡∑í‡∂ö‡∂∏‡∑ä ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠",
    "‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è_‡∑É‡∑Ñ‡∂∑‡∑è‡∂ú‡∑ì_‡∂±‡∑ú‡∑Ä‡∑ô ",
    "‡∂≠‡∑î‡∂Ω‡∑ä‚Äç‡∂∫ _‡∑ê‡∂≥‡∑î‡∂±‡∑î‡∂∏‡∑ä‡∂¥‡∂≠_‡∂Ö‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î‡∂∫",
    "‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∂ö‡∂≠‡∑è‡∂∂‡∑Ñ ‡∂Ö‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫ ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑í",
    "‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∂ö‡∑í‡∂±‡∑ä ‡∂ë‡∂∫ ‡∂¥‡∂∫‡∑í‡∂±‡∑ä ‡∂ú‡∑ê‡∑É‡∑ì‡∂∏‡∂ß ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î‡∂ú‡∑ö ‡∂Ü‡∂ª‡∑è‡∂∞‡∑í‡∂≠‡∂∫‡∑è ‡∑Ä‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫",
    "‡∂†‡∑ê‡∂ß‡∑ä_‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö_‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫‡∂∫‡∑í",
    "‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑í‡∂±‡∑ä‡∂ß Kick ‡∂ú‡∑ê‡∑É‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö ‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∂ö ‡∂±‡∑í‡∂ª‡∑ä‡∂∏‡∑è‡∂≠‡∑ò‡∂ß ‡∂¥‡∂∏‡∂´‡∑í",
    "‡∂±‡∑è‡∂Ω‡∑í‡∂ö‡∑è‡∑Ä_‡∂¥‡∑î‡∂Ø‡∑ä‡∂ú‡∂Ω‡∑í‡∂ö‡∂∫‡∑í",
    "‡∂†‡∑ê‡∂ß‡∑ä ‡∂ë‡∂ö‡∑ö ‡∂±‡∑ê‡∑Ñ‡∑ê"
}

UNGBAN_ERRORS = {
    "‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∑í ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑í",
    "‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫",
    "‡∂†‡∑ê‡∂ß‡∑ä ‡∑É‡∑è‡∂∏‡∑è‡∂¢‡∑í‡∂ö‡∂∫‡∑è‡∑Ä ‡∑É‡∑ì‡∂∏‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß / ‡∑É‡∑ì‡∂∏‡∑è ‡∂±‡∑ú‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂¥‡∑ä‚Äç‡∂ª‡∂∏‡∑è‡∂´‡∑Ä‡∂≠‡∑ä ‡∂Ö‡∂∫‡∑í‡∂≠‡∑í‡∑Ä‡∑è‡∑É‡∑í‡∂ö‡∂∏‡∑ä ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠",
    "‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è_‡∑É‡∑Ñ‡∂∑‡∑è‡∂ú‡∑ì_‡∂±‡∑ú‡∑Ä‡∑ô ",
    "‡∂≠‡∑î‡∂Ω‡∑ä‚Äç‡∂∫ _‡∑ê‡∂≥‡∑î‡∂±‡∑î‡∂∏‡∑ä‡∂¥‡∂≠_‡∂Ö‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î‡∂∫",
    "‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∂ö‡∂≠‡∑è‡∂∂‡∑Ñ ‡∂Ö‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫ ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑í",
    "‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∂ö‡∑í‡∂±‡∑ä ‡∂ë‡∂∫ ‡∂¥‡∂∫‡∑í‡∂±‡∑ä ‡∂ú‡∑ê‡∑É‡∑ì‡∂∏‡∂ß ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î‡∂ú‡∑ö ‡∂Ü‡∂ª‡∑è‡∂∞‡∑í‡∂≠‡∂∫‡∑è ‡∑Ä‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫",
    "‡∂†‡∑ê‡∂ß‡∑ä_‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö_‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫‡∂∫‡∑í",
}


@run_async
def gban(bot: Bot, update: Update, args: List[str]):
    message = update.effective_message  # type: Optional[Message]

    user_id, reason = extract_user_and_text(message, args)

    if not user_id:
        message.reply_text("‡∂î‡∂∂ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∑Ä‡∑ô‡∂≠ ‡∂∫‡∑ú‡∂∏‡∑î ‡∑Ä‡∂± ‡∂∂‡∑Ä‡∂ö‡∑ä ‡∂±‡∑ú‡∂¥‡∑ô‡∂±‡∑ö.")
        return

    if int(user_id) in SUDO_USERS:
        message.reply_text("‡∂∏‡∂∏ ‡∂î‡∂≠‡∑ä‡∂≠‡∑î ‡∂∂‡∑ê‡∂Ω‡∑î‡∑Ä‡∑ô‡∂∏‡∑í, ‡∂∏‡∂ú‡∑ö ‡∂ö‡∑î‡∂©‡∑è ‡∂á‡∑É‡∑ô‡∂±‡∑ä ... ‡∑É‡∑î‡∂©‡∑ù ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö ‡∂∫‡∑î‡∂Ø‡∑ä‡∂∞‡∂∫‡∂ö‡∑ä! ‡∂á‡∂∫‡∑í ‡∂î‡∂∫‡∑è‡∂Ω‡∑è ‡∂ë‡∂ö‡∑í‡∂±‡∑ô‡∂ö‡∑è‡∂ß ‡∑Ñ‡∂ª‡∑Ä‡∂±‡∑ä‡∂±‡∑ö?")
        return

    if int(user_id) in SUPPORT_USERS:
        message.reply_text("OOOH ‡∂∫‡∂∏‡∑ô‡∂ö‡∑ä ‡∂Ü‡∂∞‡∑è‡∂ª‡∂ö ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∂Ö‡∂Ω‡∑ä‡∂Ω‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂∫‡∑í! *‡∂∏‡∂≠‡∑ä ‡∂ë‡∂ö‡∑ä‡∂ö ‡∂í‡∑Ä‡∑è ‡∂±‡∂∏‡∑ä ‡∂∂‡∑ê ‡∂∏‡∑Ñ‡∂≠‡∑ä‡∂≠‡∂∫‡∑ù üòéüòé*")
        return

    if user_id == bot.id:
        message.reply_text("-_- ‡∑Ñ‡∂ª‡∑í‡∂∏ ‡∑Ä‡∑í‡∑Ñ‡∑í‡∂Ω‡∑î‡∂∫‡∑í, ‡∂á‡∂∫‡∑í ‡∂∏‡∂∏ ‡∂±‡∑ê‡∂≠‡∑ä‡∂≠‡∑ö? ‡∑Ñ‡∑ú‡∂≥‡∂∫‡∑í ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.")
        return

    try:
        user_chat = bot.get_chat(user_id)
    except BadRequest as excp:
        message.reply_text(excp.message)
        return

    if user_chat.type != 'private':
        message.reply_text("‡∂ë‡∂∫ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∂±‡∑ú‡∑Ä‡∑ö!")
        return

    if sql.is_user_gbanned(user_id):
        if not reason:
            message.reply_text("‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä gbanned; ‡∂∏‡∂∏ ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∂∏‡∑ä, ‡∂±‡∂∏‡∑î‡∂≠‡∑ä ‡∂î‡∂∂ ‡∂∏‡∂ß ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑î‡∂±‡∑ä‡∂±‡∑ö ‡∂±‡∑ê‡∑Ñ‡∑ê ...ü•∫üò©")
            return

        old_reason = sql.update_gban_reason(user_id, user_chat.username or user_chat.first_name, reason)
        if old_reason:
            message.reply_text("‡∂¥‡∑Ñ‡∂≠ ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä ‡∂±‡∑í‡∑É‡∑è ‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä gbanned ‡∂ö‡∂ª ‡∂á‡∂≠:\n"
                               "<code>{}</code>\n"
                               "‡∂∏‡∂∏ ‡∂ú‡∑ú‡∑É‡∑ä ‡∂î‡∂∂‡∂ú‡∑ö ‡∂±‡∑Ä ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä ‡∑É‡∂∏‡∂ü ‡∂ë‡∂∫ ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∂ª ‡∂á‡∂≠!".format(html.escape(old_reason)),
                               parse_mode=ParseMode.HTML)
        else:
            message.reply_text("‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä ‡∂Ö‡∑Ä‡∑Ñ‡∑í‡∂ª ‡∂ö‡∂ª ‡∂á‡∂≠, ‡∂±‡∂∏‡∑î‡∂≠‡∑ä ‡∂ö‡∑í‡∑É‡∑í‡∂Ø‡∑î ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä‡∂ö‡∑ä ‡∑É‡∂ö‡∑É‡∑è ‡∂±‡∑ê‡∂≠; ‡∂∏‡∂∏ ‡∂ú‡∑ú‡∑É‡∑ä ‡∂ë‡∂∫ ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∂ª ‡∂á‡∂≠!")

        return

    message.reply_text("‚ö°Ô∏è *Snaps the Banhammer* ‚ö°Ô∏è")

    banner = update.effective_user  # type: Optional[User]
    send_to_list(bot, SUDO_USERS + SUPPORT_USERS,
                 "<b>Global Ban</b>" \
                 "\n#GBAN" \
                 "\n<b>Status:</b> <code>Enforcing</code>" \
                 "\n<b>Sudo Admin:</b> {}" \
                 "\n<b>User:</b> {}" \
                 "\n<b>ID:</b> <code>{}</code>" \
                 "\n<b>Reason:</b> {}".format(mention_html(banner.id, banner.first_name),
                                              mention_html(user_chat.id, user_chat.first_name), 
                                                           user_chat.id, reason or "No reason given"), 
                html=True)

    sql.gban_user(user_id, user_chat.username or user_chat.first_name, reason)

    chats = get_all_chats()
    for chat in chats:
        chat_id = chat.chat_id

        # Check if this group has disabled gbans
        if not sql.does_chat_gban(chat_id):
            continue

        try:
            bot.kick_chat_member(chat_id, user_id)
        except BadRequest as excp:
            if excp.message in GBAN_ERRORS:
                pass
            else:
                message.reply_text("‡∂∏‡∑ö ‡∂±‡∑í‡∑É‡∑è gban ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑í‡∂∫: {}".format(excp.message))
                send_to_list(bot, SUDO_USERS + SUPPORT_USERS, "‡∂∏‡∑ö ‡∂±‡∑í‡∑É‡∑è gban ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑í‡∂∫: {}".format(excp.message))
                sql.ungban_user(user_id)
                return
        except TelegramError:
            pass

    send_to_list(bot, SUDO_USERS + SUPPORT_USERS, 
                  "{} h‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂ú‡∑ê‡∂∂‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠‡∑í ‡∂¥‡∂ª‡∑í‡∂Ø‡∑í!".format(mention_html(user_chat.id, user_chat.first_name)),
                html=True)
    message.reply_text("Person has been gbanned.")


@run_async
def ungban(bot: Bot, update: Update, args: List[str]):
    message = update.effective_message  # type: Optional[Message]

    user_id = extract_user(message, args)
    if not user_id:
        message.reply_text("‡∂î‡∂∂ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∑Ä‡∑ô‡∂≠ ‡∂∫‡∑ú‡∂∏‡∑î ‡∑Ä‡∂± ‡∂∂‡∑Ä‡∂ö‡∑ä ‡∂±‡∑ú‡∂¥‡∑ô‡∂±‡∑ö.")
        return

    user_chat = bot.get_chat(user_id)
    if user_chat.type != 'private':
        message.reply_text("‡∂ë‡∂∫ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∂±‡∑ú‡∑Ä‡∑ö!")
        return

    if not sql.is_user_gbanned(user_id):
        message.reply_text("‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è gbanned ‡∂±‡∑ú‡∑Ä‡∑ö!")
        return

    banner = update.effective_user  # type: Optional[User]

    message.reply_text("‡∂∏‡∂∏ ‡∑É‡∂∏‡∑è‡∑Ä ‡∂Ø‡∑ô‡∂±‡∑Ä‡∑è {}, ‡∂ú‡∑ù‡∂Ω‡∑ì‡∂∫ ‡∑Ä‡∑Å‡∂∫‡∑ô‡∂±‡∑ä ‡∂Ø‡∑ô‡∑Ä‡∂± ‡∂Ö‡∑Ä‡∑É‡∑ä‡∂Æ‡∑è‡∑Ä ‡∑É‡∂∏‡∂ü.".format(user_chat.first_name))

    send_to_list(bot, SUDO_USERS + SUPPORT_USERS,
                 "<b>Regression of Global Ban</b>" \
                 "\n#UNGBAN" \
                 "\n<b>Status:</b> <code>Ceased</code>" \
                 "\n<b>Sudo Admin:</b> {}" \
                 "\n<b>User:</b> {}" \
                 "\n<b>ID:</b> <code>{}</code>".format(mention_html(banner.id, banner.first_name),
                                                       mention_html(user_chat.id, user_chat.first_name), 
                                                                    user_chat.id),
                 html=True)

    chats = get_all_chats()
    for chat in chats:
        chat_id = chat.chat_id

        # Check if this group has disabled gbans
        if not sql.does_chat_gban(chat_id):
            continue

        try:
            member = bot.get_chat_member(chat_id, user_id)
            if member.status == 'kicked':
                bot.unban_chat_member(chat_id, user_id)

        except BadRequest as excp:
            if excp.message in UNGBAN_ERRORS:
                pass
            else:
                message.reply_text("‡∂±‡∑í‡∑É‡∑è un-gban ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑í‡∂∫: {}".format(excp.message))
                bot.send_message(OWNER_ID, "‡∂±‡∑í‡∑É‡∑è un-gban ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑í‡∂∫: {}".format(excp.message))
                return
        except TelegramError:
            pass

    sql.ungban_user(user_id)

    send_to_list(bot, SUDO_USERS + SUPPORT_USERS, 
                  "{} gban ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∑É‡∂∏‡∑è‡∑Ä ‡∂Ω‡∑ê‡∂∂‡∑ì ‡∂á‡∂≠!".format(mention_html(user_chat.id, 
                                                                         user_chat.first_name)),
                  html=True)

    message.reply_text("‡∂∏‡∑ô‡∂∏ ‡∂¥‡∑î‡∂Ø‡∑ä‡∂ú‡∂Ω‡∂∫‡∑è‡∂ß ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠‡∑í ‡∂Ö‡∂≠‡∂ª ‡∑É‡∂∏‡∑è‡∑Ä ‡∂Ø‡∑ô‡∂±‡∑î ‡∂Ω‡∑ê‡∂∂‡∑ö!")


@run_async
def gbanlist(bot: Bot, update: Update):
    banned_users = sql.get_gban_list()

    if not banned_users:
        update.effective_message.reply_text("Gbanned ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∂±‡∑ä ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠! ‡∂∏‡∂∏ ‡∑Ñ‡∑í‡∂≠‡∑î‡∑Ä‡∂ß ‡∑Ä‡∂©‡∑è ‡∂î‡∂∫‡∑è ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∑Ä‡∂±‡∑ä‡∂≠‡∂∫‡∑í ...ü§óü•∞")
        return

    banfile = 'Screw these guys.\n'
    for user in banned_users:
        banfile += "[x] {} - {}\n".format(user["name"], user["user_id"])
        if user["reason"]:
            banfile += "Reason: {}\n".format(user["reason"])

    with BytesIO(str.encode(banfile)) as output:
        output.name = "gbanlist.txt"
        update.effective_message.reply_document(document=output, filename="gbanlist.txt",
                                                caption="‡∂Ø‡∑ê‡∂±‡∂ß gbanned ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∂±‡∑ä‡∂ú‡∑ö ‡∂Ω‡∑ê‡∂∫‡∑í‡∑É‡∑ä‡∂≠‡∑î‡∑Ä ‡∂∏‡∑ô‡∂±‡∑ä‡∂±.")


def check_and_ban(update, user_id, should_message=True):
    if sql.is_user_gbanned(user_id):
        update.effective_chat.kick_member(user_id)
        if should_message:
            update.effective_message.reply_text("‡∂∏‡∑ö‡∂ö ‡∂±‡∂ª‡∂ö ‡∂¥‡∑î‡∂Ø‡∑ä‡∂ú‡∂Ω‡∂∫‡∑ô‡∂ö‡∑ä, ‡∂î‡∑Ä‡∑î‡∂±‡∑ä ‡∂∏‡∑ô‡∑Ñ‡∑í ‡∂±‡∑ú‡∑É‡∑í‡∂ß‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫‡∑í!")


@run_async
def enforce_gban(bot: Bot, update: Update):
    # Not using @restrict handler to avoid spamming - just ignore if cant gban.
    if sql.does_chat_gban(update.effective_chat.id) and update.effective_chat.get_member(bot.id).can_restrict_members:
        user = update.effective_user  # type: Optional[User]
        chat = update.effective_chat  # type: Optional[Chat]
        msg = update.effective_message  # type: Optional[Message]

        if user and not is_user_admin(chat, user.id):
            check_and_ban(update, user.id)

        if msg.new_chat_members:
            new_members = update.effective_message.new_chat_members
            for mem in new_members:
                check_and_ban(update, mem.id)

        if msg.reply_to_message:
            user = msg.reply_to_message.from_user  # type: Optional[User]
            if user and not is_user_admin(chat, user.id):
                check_and_ban(update, user.id, should_message=False)


@run_async
@user_admin
def gbanstat(bot: Bot, update: Update, args: List[str]):
    if len(args) > 0:
        if args[0].lower() in ["on", "yes"]:
            sql.enable_gbans(update.effective_chat.id)
            update.effective_message.reply_text("‡∂∏‡∂∏ ‡∂∏‡∑ô‡∂∏ ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ö gbans ‡∑É‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∫ ‡∂ö‡∂ª ‡∂á‡∂≠. ‡∂∏‡∑ô‡∂∫ ‡∂î‡∂∂‡∑Ä ‡∂Ü‡∂ª‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂ã‡∂¥‡∂ö‡∑è‡∂ª‡∑ì ‡∑Ä‡∑ö "
                                                "‡∂Ö‡∂∫‡∑è‡∂†‡∑í‡∂≠ ‡∂≠‡∑ê‡∂¥‡∑ê‡∂Ω‡∑ä, ‡∂Ö‡∂¥‡∑ä‚Äç‡∂ª‡∑É‡∂±‡∑ä‡∂± ‡∂†‡∂ª‡∑í‡∂≠ ‡∑É‡∑Ñ ‡∑Ä‡∑í‡∑Å‡∑è‡∂Ω‡∂≠‡∂∏ ‡∂ß‡∑ä‚Äç‡∂ª‡∑ù‡∂Ω‡∂ª‡∑ä ‡∑Ä‡∂Ω‡∑í‡∂±‡∑ä.")
        elif args[0].lower() in ["off", "no"]:
            sql.disable_gbans(update.effective_chat.id)
            update.effective_message.reply_text("‡∂∏‡∂∏ ‡∂∏‡∑ô‡∂∏ ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ö gbans ‡∂Ö‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∫ ‡∂ö‡∂ª ‡∂á‡∂≠. GBans ‡∂î‡∂∂‡∂ú‡∑ö ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑í‡∂±‡∑ä‡∂ß ‡∂∂‡∂Ω‡∂¥‡∑è‡∂±‡∑ä‡∂±‡∑ö ‡∂±‡∑ê‡∂≠ "
                                                "‡∂≠‡∑Ä‡∂Ø‡∑î‡∂ª‡∂ß‡∂≠‡∑ä. ‡∂ï‡∂±‡∑ë‡∂∏ ‡∂ß‡∑ä‚Äç‡∂ª‡∑ù‡∂Ω‡∂ª‡∑ä ‡∑É‡∑Ñ ‡∑É‡∑ä‡∂¥‡∑ë‡∂∏‡∑ä‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä‡∂ú‡∑ô‡∂±‡∑ä ‡∂î‡∂∂‡∑Ä ‡∂Ö‡∂©‡∑î ‡∂Ü‡∂ª‡∂ö‡∑ä‡∑Ç‡∑è‡∑Ä‡∂ö‡∑ä ‡∂Ω‡∑ê‡∂∂‡∑ô‡∂±‡∑î ‡∂á‡∂≠ "
                                                "‡∂±‡∂∏‡∑î‡∂≠‡∑ä!")
    else:
        update.effective_message.reply_text("G‡∂¥‡∑É‡∑î‡∂∂‡∑í‡∂∏‡∂ö‡∑ä ‡∂≠‡∑ù‡∂ª‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß ‡∂∏‡∂ß ‡∂≠‡∂ª‡∑ä‡∂ö ‡∂ö‡∑í‡∑Ñ‡∑í‡∂¥‡∂∫‡∂ö‡∑ä ‡∂â‡∂Ø‡∑í‡∂ª‡∑í‡∂¥‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±! on/off, yes/no!\n\n"
                                            "‡∂î‡∂∂‡∂ú‡∑ö ‡∑Ä‡∂ª‡∑ä‡∂≠‡∂∏‡∑è‡∂± ‡∑É‡∑ê‡∂ö‡∑É‡∑î‡∂∏: {}\n"
                                            "‡∑É‡∂≠‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑ñ ‡∑Ä‡∑í‡∂ß, ‡∑É‡∑í‡∂Ø‡∑î‡∑Ä‡∂± ‡∂ï‡∂±‡∑ë‡∂∏ gban ‡∂î‡∂∂‡∑ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏ ‡∂≠‡∑î‡∑Ö ‡∂Ø ‡∑É‡∑í‡∂Ø‡∑î‡∑Ä‡∂±‡∑î ‡∂á‡∂≠."
                                            "‡∂Ö‡∑É‡∂≠‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑ñ ‡∑Ä‡∑í‡∂ß, ‡∂î‡∑Ä‡∑î‡∂±‡∑ä ‡∂ë‡∑É‡∑ö ‡∂±‡∑ú‡∂ö‡∂ª‡∂±‡∑î ‡∂á‡∂≠ "
                                            "spammers.".format(sql.does_chat_gban(update.effective_chat.id)))


def __stats__():
    return "{} gbanned users.".format(sql.num_gbanned_users())


def __user_info__(user_id):
    is_gbanned = sql.is_user_gbanned(user_id)

    text = "Globally banned: <b>{}</b>"
    if is_gbanned:
        text = text.format("Yes")
        user = sql.get_gbanned_user(user_id)
        if user.reason:
            text += "\nReason: {}".format(html.escape(user.reason))
    else:
        text = text.format("No")
    return text


def __migrate__(old_chat_id, new_chat_id):
    sql.migrate_chat(old_chat_id, new_chat_id)


def __chat_settings__(chat_id, user_id):
    return "This chat is enforcing *gbans*: `{}`.".format(sql.does_chat_gban(chat_id))


__help__ = """
*‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö ‡∂¥‡∂∏‡∂´‡∑í:*
 - /gbanstat <on/off/yes/no>:‡∂î‡∂∂‡∂ú‡∑ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∂ß ‡∂ú‡∑ù‡∂Ω‡∑ì‡∂∫ ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ö ‡∂∂‡∂Ω‡∂¥‡∑ë‡∂∏ ‡∂Ö‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∫ ‡∂ö‡∂ª‡∂±‡∑î ‡∂á‡∂≠, ‡∂±‡∑ê‡∂≠‡∑Ñ‡∑ú‡∂≠‡∑ä ‡∂î‡∂∂‡∂ú‡∑ö ‡∑Ä‡∂ª‡∑ä‡∂≠‡∂∏‡∑è‡∂± ‡∑É‡∑ê‡∂ö‡∑É‡∑î‡∂∏‡∑ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑î ‡∂á‡∂≠.

‡∂ú‡∑ù‡∂Ω‡∑ì‡∂∫ ‡∂≠‡∑Ñ‡∂±‡∂∏ ‡∂Ω‡∑ô‡∑É‡∂Ø ‡∑Ñ‡∑ê‡∂≥‡∑í‡∂±‡∑ä‡∑Ä‡∑ô‡∂± ‡∂ú‡∑ä‡∂∂‡∑è‡∂±‡∑ä‡∑É‡∑ä, ‡∑É‡∑í‡∂∫‡∂Ω‡∑î‡∂∏ ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∑Ñ‡∂ª‡∑Ñ‡∑è ‡∂Ö‡∂∫‡∑è‡∂†‡∑í‡∂≠ ‡∂≠‡∑ê‡∂¥‡∑ê‡∂Ω‡∑ä ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂∂‡∑ú‡∂ß‡∑ä ‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä ‡∑Ä‡∑í‡∑É‡∑í‡∂±‡∑ä ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑î ‡∂Ω‡∑ê‡∂∂‡∑ö. ‡∂∏‡∑ô‡∂∫ ‡∂Ü‡∂ª‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂ã‡∂¥‡∂ö‡∑è‡∂ª‡∑ì ‡∑Ä‡∑ö \
‡∂î‡∂∂ ‡∑É‡∑Ñ ‡∂î‡∂∂‡∑ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∑Ñ‡∑ê‡∂ö‡∑í ‡∂â‡∂ö‡∑ä‡∂∏‡∂±‡∑í‡∂±‡∑ä ‡∂Ö‡∂∫‡∑è‡∂†‡∑í‡∂≠ ‡∂≠‡∑ê‡∂¥‡∑ê‡∂Ω‡∑ä ‡∂ú‡∂Ç‡∑Ä‡∂≠‡∑î‡∂ª ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ô‡∂±‡∑ä. Call ‡∂á‡∂∏‡∂≠‡∑ì‡∂∏‡∑ô‡∂±‡∑ä ‡∂í‡∑Ä‡∑è ‡∂î‡∂∂‡∂ú‡∑ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂Ö‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫ ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂∫
/gbanstat
"""

__mod_name__ = "Global Bans"

GBAN_HANDLER = CommandHandler("gban", gban, pass_args=True,
                              filters=CustomFilters.sudo_filter | CustomFilters.support_filter)
UNGBAN_HANDLER = CommandHandler("ungban", ungban, pass_args=True,
                                filters=CustomFilters.sudo_filter | CustomFilters.support_filter)
GBAN_LIST = CommandHandler("gbanlist", gbanlist,
                           filters=CustomFilters.sudo_filter | CustomFilters.support_filter)

GBAN_STATUS = CommandHandler("gbanstat", gbanstat, pass_args=True, filters=Filters.group)

GBAN_ENFORCER = MessageHandler(Filters.all & Filters.group, enforce_gban)

dispatcher.add_handler(GBAN_HANDLER)
dispatcher.add_handler(UNGBAN_HANDLER)
dispatcher.add_handler(GBAN_LIST)
dispatcher.add_handler(GBAN_STATUS)

if STRICT_GBAN:  # enforce GBANS if this is set
    dispatcher.add_handler(GBAN_ENFORCER, GBAN_ENFORCE_GROUP)
