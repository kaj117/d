import html
from typing import Optional, List

from telegram import Message, Chat, Update, Bot, User
from telegram.error import BadRequest
from telegram.ext import run_async, CommandHandler, Filters
from telegram.utils.helpers import mention_html
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ParseMode, User, CallbackQuery

from tg_bot import dispatcher, BAN_STICKER, LOGGER
from tg_bot.modules.disable import DisableAbleCommandHandler
from tg_bot.modules.helper_funcs.chat_status import bot_admin, user_admin, is_user_ban_protected, can_restrict, \
    is_user_admin, is_user_in_chat, is_bot_admin
from tg_bot.modules.helper_funcs.extraction import extract_user_and_text
from tg_bot.modules.helper_funcs.string_handling import extract_time
from tg_bot.modules.log_channel import loggable
from tg_bot.modules.helper_funcs.filters import CustomFilters

RBAN_ERRORS = {
    "‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∑í ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑í",
    "‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫",
    "‡∂†‡∑ê‡∂ß‡∑ä ‡∑É‡∑è‡∂∏‡∑è‡∂¢‡∑í‡∂ö‡∂∫‡∑è‡∑Ä ‡∑É‡∑ì‡∂∏‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß / ‡∑É‡∑ì‡∂∏‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂¥‡∑ä‚Äç‡∂ª‡∂∏‡∑è‡∂´‡∑Ä‡∂≠‡∑ä ‡∂Ö‡∂∫‡∑í‡∂≠‡∑í‡∑Ä‡∑è‡∑É‡∑í‡∂ö‡∂∏‡∑ä ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠",
    "‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è_‡∑É‡∑Ñ‡∂∑‡∑è‡∂ú‡∑ì_‡∂±‡∑ú‡∑Ä‡∑ö",
    "‡∂≠‡∑î‡∂Ω‡∑ä‚Äç‡∂∫ _‡∑ê‡∂≥‡∑î‡∂±‡∑î‡∂∏‡∑ä‡∂¥‡∂≠_‡∂Ö‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î‡∂∫",
    "‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∂ö‡∂≠‡∑è‡∂∂‡∑Ñ ‡∂Ö‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫ ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑í",
    "‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∂ö‡∑í‡∂±‡∑ä ‡∂ë‡∂∫  kick ‡∂ú‡∑ê‡∑É‡∑ì‡∂∏‡∂ß ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î‡∂ú‡∑ö ‡∂Ü‡∂ª‡∑è‡∂∞‡∑í‡∂≠‡∂∫‡∑è ‡∑Ä‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫",
    "‡∂†‡∑ê‡∂ß‡∑ä_‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö_‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫‡∂∫‡∑í",
    "‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑í‡∂±‡∑ä‡∂ß  kick ‡∂ú‡∑ê‡∑É‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö ‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∂ö ‡∂±‡∑í‡∂ª‡∑ä‡∂∏‡∑è‡∂≠‡∑ò‡∂ß ‡∂¥‡∂∏‡∂´‡∑í",
    "‡∂±‡∑è‡∂Ω‡∑í‡∂ö‡∑è‡∑Ä_‡∂¥‡∑î‡∂Ø‡∑ä‡∂ú‡∂Ω‡∑í‡∂ö‡∂∫‡∑í",
    "‡∂†‡∑ê‡∂ß‡∑ä ‡∂ë‡∂ö‡∑ö ‡∂±‡∑ê‡∑Ñ‡∑ê"
}

RUNBAN_ERRORS = {
    "‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∑í ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑í",
    "‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫",
    "‡∂†‡∑ê‡∂ß‡∑ä ‡∑É‡∑è‡∂∏‡∑è‡∂¢‡∑í‡∂ö‡∂∫‡∑è‡∑Ä ‡∑É‡∑ì‡∂∏‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß / ‡∑É‡∑ì‡∂∏‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂¥‡∑ä‚Äç‡∂ª‡∂∏‡∑è‡∂´‡∑Ä‡∂≠‡∑ä ‡∂Ö‡∂∫‡∑í‡∂≠‡∑í‡∑Ä‡∑è‡∑É‡∑í‡∂ö‡∂∏‡∑ä ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠",
    "‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è_‡∑É‡∑Ñ‡∂∑‡∑è‡∂ú‡∑ì_‡∂±‡∑ú‡∑Ä‡∑ö",
    "‡∂≠‡∑î‡∂Ω‡∑ä‚Äç‡∂∫ _‡∑ê‡∂≥‡∑î‡∂±‡∑î‡∂∏‡∑ä‡∂¥‡∂≠_‡∂Ö‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î‡∂∫",
    "‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∂ö‡∂≠‡∑è‡∂∂‡∑Ñ ‡∂Ö‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫ ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑í",
    "‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∂ö‡∑í‡∂±‡∑ä ‡∂ë‡∂∫  kick ‡∂ú‡∑ê‡∑É‡∑ì‡∂∏‡∂ß ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î‡∂ú‡∑ö ‡∂Ü‡∂ª‡∑è‡∂∞‡∑í‡∂≠‡∂∫‡∑è ‡∑Ä‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫",
    "‡∂†‡∑ê‡∂ß‡∑ä_‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö_‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫‡∂∫‡∑í",
    "‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑í‡∂±‡∑ä‡∂ß  kick ‡∂ú‡∑ê‡∑É‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö ‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∂ö ‡∂±‡∑í‡∂ª‡∑ä‡∂∏‡∑è‡∂≠‡∑ò‡∂ß ‡∂¥‡∂∏‡∂´‡∑í",
    "‡∂±‡∑è‡∂Ω‡∑í‡∂ö‡∑è‡∑Ä_‡∂¥‡∑î‡∂Ø‡∑ä‡∂ú‡∂Ω‡∑í‡∂ö‡∂∫‡∑í",
    "‡∂†‡∑ê‡∂ß‡∑ä ‡∂ë‡∂ö‡∑ö ‡∂±‡∑ê‡∑Ñ‡∑ê"
}



@run_async
@bot_admin
@can_restrict
@user_admin
@loggable
def ban(bot: Bot, update: Update, args: List[str]) -> str:
    chat = update.effective_chat  # type: Optional[Chat]
    user = update.effective_user  # type: Optional[User]
    message = update.effective_message  # type: Optional[Message]

    user_id, reason = extract_user_and_text(message, args)

    if not user_id:
        message.reply_text("‡∂î‡∂∂ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∑Ä‡∑ô‡∂≠ ‡∂∫‡∑ú‡∂∏‡∑î ‡∑Ä‡∂± ‡∂∂‡∑Ä‡∂ö‡∑ä ‡∂±‡∑ú‡∂¥‡∑ô‡∂±‡∑ö.")
        return ""

    try:
        member = chat.get_member(user_id)
    except BadRequest as excp:
        if excp.message == "User not found":
            message.reply_text("‡∂∏‡∂ß ‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∑É‡∑ú‡∂∫‡∑è ‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö")
            return ""
        else:
            raise

    if is_user_ban_protected(chat, user_id, member):
        message.reply_text("‡∂∏‡∂∏ ‡∂á‡∂≠‡∑ä‡∂≠‡∂ß‡∂∏ ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑í‡∂±‡∑ä ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂ö‡∑ê‡∂∏‡∂≠‡∑í‡∂∫‡∑í...ü§óü§ó")
        return ""

    if user_id == bot.id:
        message.reply_text("‡∂∏‡∂∏ ‡∂∫‡∂±‡∑ä‡∂±‡∑ö ‡∂±‡∑ê‡∑Ñ‡∑ê ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂∏‡∑è, ‡∂î‡∂∫‡∑è‡∂ß ‡∂¥‡∑í‡∑É‡∑ä‡∑É‡∑î ‡∂Ø?")
        return ""

    log = "<b>{}:</b>" \
          "\n#BANNED" \
          "\n<b>Admin:</b> {}" \
          "\n<b>User:</b> {}".format(html.escape(chat.title), mention_html(user.id, user.first_name),
                                     mention_html(member.user.id, member.user.first_name))
    if reason:
        log += "\n<b>Reason:</b> {}".format(reason)

    try:
        chat.kick_member(user_id)
        bot.send_sticker(chat.id, BAN_STICKER)  # banhammer marie sticker
        keyboard = []
        reply = "{} Banned!".format(mention_html(member.user.id, member.user.first_name))
        message.reply_text(reply, reply_markup=keyboard, parse_mode=ParseMode.HTML)
        return log

    except BadRequest as excp:
        if excp.message == "Reply message not found":
            # Do not reply
            message.reply_text('Banned!', quote=False)
            return log
        else:
            LOGGER.warning(update)
            LOGGER.exception("ERROR banning user %s in chat %s (%s) due to %s", user_id, chat.title, chat.id,
                             excp.message)
            message.reply_text("‡∑Ñ‡∑ú‡∂≥‡∂∫‡∑í, ‡∂∏‡∂ß ‡∂ë‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.")

    return ""


@run_async
@bot_admin
@can_restrict
@user_admin
@loggable
def temp_ban(bot: Bot, update: Update, args: List[str]) -> str:
    chat = update.effective_chat  # type: Optional[Chat]
    user = update.effective_user  # type: Optional[User]
    message = update.effective_message  # type: Optional[Message]

    user_id, reason = extract_user_and_text(message, args)

    if not user_id:
        message.reply_text("‡∂î‡∂∂ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∑Ä‡∑ô‡∂≠ ‡∂∫‡∑ú‡∂∏‡∑î ‡∑Ä‡∂± ‡∂∂‡∑Ä‡∂ö‡∑ä ‡∂±‡∑ú‡∂¥‡∑ô‡∂±‡∑ö.")
        return ""

    try:
        member = chat.get_member(user_id)
    except BadRequest as excp:
        if excp.message == "‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫":
            message.reply_text("‡∂∏‡∂ß ‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∑É‡∑ú‡∂∫‡∑è ‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö")
            return ""
        else:
            raise

    if is_user_ban_protected(chat, user_id, member):
        message.reply_text("‡∂∏‡∂∏ ‡∂á‡∂≠‡∑ä‡∂≠‡∂ß‡∂∏ ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑í‡∂±‡∑ä ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂ö‡∑ê‡∂∏‡∂≠‡∑í‡∂∫‡∑í...ü§óü§ó")
        return ""

    if user_id == bot.id:
        message.reply_text("‡∂∏‡∂∏ ‡∂∫‡∂±‡∑ä‡∂±‡∑ö ‡∂±‡∑ê‡∑Ñ‡∑ê ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂∏‡∑è, ‡∂î‡∂∫‡∑è‡∂ß ‡∂¥‡∑í‡∑É‡∑ä‡∑É‡∑î ‡∂Ø?")
        return ""

    if not reason:
        message.reply_text("‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂î‡∂∂ ‡∂ö‡∑è‡∂Ω‡∂∫‡∂ö‡∑ä ‡∂±‡∑í‡∂∫‡∂∏ ‡∂ö‡∂ª ‡∂±‡∑ê‡∂≠!")
        return ""

    split_reason = reason.split(None, 1)

    time_val = split_reason[0].lower()
    if len(split_reason) > 1:
        reason = split_reason[1]
    else:
        reason = ""

    bantime = extract_time(message, time_val)

    if not bantime:
        return ""

    log = "<b>{}:</b>" \
          "\n#TEMP BANNED" \
          "\n<b>Admin:</b> {}" \
          "\n<b>User:</b> {}" \
          "\n<b>Time:</b> {}".format(html.escape(chat.title), mention_html(user.id, user.first_name),
                                     mention_html(member.user.id, member.user.first_name), time_val)
    if reason:
        log += "\n<b>Reason:</b> {}".format(reason)

    try:
        chat.kick_member(user_id, until_date=bantime)
        bot.send_sticker(chat.id, BAN_STICKER)  # banhammer marie sticker
        message.reply_text("‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä! ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑î ‡∂Ω‡∑ê‡∂∂‡∑ö {}.".format(time_val))
        return log

    except BadRequest as excp:
        if excp.message == "‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂¥‡∂´‡∑í‡∑Ä‡∑í‡∂©‡∂∫ ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫":
            # Do not reply
            message.reply_text("‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä! ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑î ‡∂Ω‡∑ê‡∂∂‡∑ö {}.".format(time_val), quote=False)
            return log
        else:
            LOGGER.warning(update)
            LOGGER.exception("‡∂Ø‡∑ù‡∑Ç ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ user %s ‡∂≠‡∑î‡∂Ω chat %s (%s) due to %s", user_id, chat.title, chat.id,
                             excp.message)
            message.reply_text("‡∑Ñ‡∑ú‡∂≥‡∂∫‡∑í, ‡∂∏‡∂ß ‡∂ë‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.")

    return ""


@run_async
@bot_admin
@can_restrict
@user_admin
@loggable
def kick(bot: Bot, update: Update, args: List[str]) -> str:
    chat = update.effective_chat  # type: Optional[Chat]
    user = update.effective_user  # type: Optional[User]
    message = update.effective_message  # type: Optional[Message]

    user_id, reason = extract_user_and_text(message, args)

    if not user_id:
        return ""

    try:
        member = chat.get_member(user_id)
    except BadRequest as excp:
        if excp.message == "User not found":
            message.reply_text("‡∂∏‡∂ß ‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∑É‡∑ú‡∂∫‡∑è ‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö")
            return ""
        else:
            raise

    if is_user_ban_protected(chat, user_id):
        message.reply_text("‡∂∏‡∂∏ ‡∂á‡∂≠‡∑ä‡∂≠‡∂ß‡∂∏ ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑í‡∂±‡∑ä ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂ö‡∑ê‡∂∏‡∂≠‡∑í‡∂∫‡∑í...ü§óü§ó")
        return ""

    if user_id == bot.id:
        message.reply_text("‡∂î‡∑Ä‡∑ä, ‡∂∏‡∂∏ ‡∂í‡∂ö ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂∫‡∂±‡∑ä‡∂±‡∑ö ‡∂±‡∑ê‡∑Ñ‡∑ê")
        return ""

    res = chat.unban_member(user_id)  # unban on current user = kick
    if res:
        bot.send_sticker(chat.id, BAN_STICKER)  # banhammer marie sticker
        message.reply_text("Kicked!üö´")
        log = "<b>{}:</b>" \
              "\n#KICKED" \
              "\n<b>Admin:</b> {}" \
              "\n<b>User:</b> {}".format(html.escape(chat.title),
                                         mention_html(user.id, user.first_name),
                                         mention_html(member.user.id, member.user.first_name))
        if reason:
            log += "\n<b>Reason:</b> {}".format(reason)

        return log

    else:
        message.reply_text("‡∑Ñ‡∑ú‡∂≥‡∂∫‡∑í, ‡∂∏‡∂ß ‡∂í ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è‡∂ß Kick ‡∂ú‡∑Ñ‡∂±‡∑ä‡∂± ‡∂∂‡∑ê‡∑Ñ‡∑ê.")

    return ""


@run_async
@bot_admin
@can_restrict
def kickme(bot: Bot, update: Update):
    user_id = update.effective_message.from_user.id
    if is_user_admin(update.effective_chat, user_id):
        update.effective_message.reply_text("‡∂∏‡∂∏ ‡∂¥‡∑ä‚Äç‡∂ª‡∑è‡∂ª‡∑ä‡∂Æ‡∂±‡∑è ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è ‡∂∏‡∂ß ‡∂¥‡∑î‡∑Ö‡∑î‡∑Ä‡∂±‡∑ä ... ‡∂í‡∂≠‡∑ä ‡∂î‡∂∫‡∑è ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑ä.")
        return

    res = update.effective_chat.unban_member(user_id)  # unban on current user = kick
    if res:
        update.effective_message.reply_text("‡∂ö‡∑í‡∑É‡∑í‡∂∏ ‡∂¥‡∑ä‡∂ª‡∑Å‡∑ä‡∂±‡∂∫‡∂ö‡∑ä ‡∂±‡∑ê.")
    else:
        update.effective_message.reply_text("‡∑Ñ‡∑Ñ‡∑ä? ‡∂∏‡∂ß ‡∂∂‡∑ê‡∑Ñ‡∑ê :/")


@run_async
@bot_admin
@can_restrict
@user_admin
@loggable
def unban(bot: Bot, update: Update, args: List[str]) -> str:
    message = update.effective_message  # type: Optional[Message]
    user = update.effective_user  # type: Optional[User]
    chat = update.effective_chat  # type: Optional[Chat]

    user_id, reason = extract_user_and_text(message, args)

    if not user_id:
        return ""

    try:
        member = chat.get_member(user_id)
    except BadRequest as excp:
        if excp.message == "User not found":
            message.reply_text("‡∂∏‡∂ß ‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∑É‡∑ú‡∂∫‡∑è ‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö")
            return ""
        else:
            raise

    if user_id == bot.id:
        message.reply_text("‡∂∏‡∂∏ ‡∂∏‡∑ô‡∑Ñ‡∑í ‡∂±‡∑ú‡∑É‡∑í‡∂ß‡∑í‡∂∫‡∑ö ‡∂±‡∂∏‡∑ä ‡∂∏‡∑è ‡∂ö‡∑ô‡∑É‡∑ö ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∑ö‡∂Ø?...?")
        return ""

    if is_user_in_chat(chat, user_id):
        message.reply_text("‡∂î‡∂∂ ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø‡∂∫‡∑ö ‡∂∫‡∑ô‡∂Ø‡∑ì ‡∑É‡∑í‡∂ß‡∑í‡∂± ‡∂Ö‡∂∫‡∑ô‡∂ö‡∑î ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∑ö ‡∂á‡∂∫‡∑í??")
        return ""

    chat.unban_member(user_id)
    message.reply_text("‡∂î‡∑Ä‡∑ä, ‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è‡∂ß ‡∑É‡∂∏‡∑ä‡∂∂‡∂±‡∑ä‡∂∞ ‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂∫!")

    log = "<b>{}:</b>" \
          "\n#UNBANNED" \
          "\n<b>Admin:</b> {}" \
          "\n<b>User:</b> {}".format(html.escape(chat.title),
                                     mention_html(user.id, user.first_name),
                                     mention_html(member.user.id, member.user.first_name))
    if reason:
        log += "\n<b>Reason:</b> {}".format(reason)

    return log


@run_async
@bot_admin
def rban(bot: Bot, update: Update, args: List[str]):
    message = update.effective_message

    if not args:
        message.reply_text("‡∂î‡∂∂ ‡∂∫‡∑ú‡∂∏‡∑î ‡∂Ø‡∂ö‡∑ä‡∑Ä‡∂±‡∑ä‡∂±‡∑ö  chat/user.")
        return

    user_id, chat_id = extract_user_and_text(message, args)

    if not user_id:
        message.reply_text("‡∂î‡∂∂ ‡∂∫‡∑ú‡∂∏‡∑î ‡∂Ø‡∂ö‡∑ä‡∑Ä‡∂±‡∑ä‡∂±‡∑ö  user.")
        return
    elif not chat_id:
        message.reply_text("‡∂î‡∂∂ ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂± ‡∂∂‡∑Ä‡∂ö‡∑ä ‡∂±‡∑ú‡∂¥‡∑ô‡∂±‡∑ö chat.")
        return

    try:
        chat = bot.get_chat(chat_id.split()[0])
    except BadRequest as excp:
        if excp.message == "Chat not found":
            message.reply_text("‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫! ‡∂î‡∂∂ ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∑ê‡∂≥‡∑î‡∂±‡∑î‡∂∏‡∑ä‡∂¥‡∂≠‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∑Ö ‡∂∂‡∑Ä‡∂ß ‡∑Ä‡∂ú ‡∂∂‡∂Ω‡∑è ‡∂ú‡∂±‡∑ä‡∂±, ‡∂∏‡∂∏ ‡∂ë‡∂∏ ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø‡∂∫‡∑ö ‡∂ö‡∑ú‡∂ß‡∑É‡∂ö‡∑ä ‡∑Ä‡∑ô‡∂∏‡∑í.")
            return
        else:
            raise

    if chat.type == 'private':
        message.reply_text("‡∂∏‡∂ß ‡∂ö‡∂´‡∂ú‡∑è‡∂ß‡∑î‡∂∫‡∑í, ‡∂±‡∂∏‡∑î‡∂≠‡∑ä ‡∂ë‡∂∫ ‡∂¥‡∑û‡∂Ø‡∑ä‡∂ú‡∂Ω‡∑í‡∂ö ‡∂ö‡∂≠‡∑è‡∂∂‡∑Ñ‡∂ö‡∑í!")
        return

    if not is_bot_admin(chat, bot.id) or not chat.get_member(bot.id).can_restrict_members:
        message.reply_text("‡∂∏‡∂ß ‡∂ë‡∑Ñ‡∑í ‡∂∏‡∑í‡∂±‡∑í‡∑É‡∑î‡∂±‡∑ä ‡∑É‡∑ì‡∂∏‡∑è ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö! ‡∂∏‡∂∏ ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö ‡∂∂‡∑Ä‡∂ß ‡∑Ä‡∂ú ‡∂∂‡∂Ω‡∑è ‡∂ú‡∂±‡∑ä‡∂± ‡∑É‡∑Ñ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑í‡∂±‡∑ä ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂∫.")
        return

    try:
        member = chat.get_member(user_id)
    except BadRequest as excp:
        if excp.message == "User not found":
            message.reply_text("‡∂∏‡∂ß ‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∑É‡∑ú‡∂∫‡∑è ‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö")
            return
        else:
            raise

    if is_user_ban_protected(chat, user_id, member):
        message.reply_text("‡∂∏‡∂∏ ‡∂á‡∂≠‡∑ä‡∂≠‡∂ß‡∂∏ ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑í‡∂±‡∑ä ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂ö‡∑ê‡∂∏‡∂≠‡∑í‡∂∫‡∑í...ü§óü§ó")
        return

    if user_id == bot.id:
        message.reply_text("‡∂î‡∑Ä‡∑ä, ‡∂∏‡∂∏ ‡∂í‡∂ö ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂∫‡∂±‡∑ä‡∂±‡∑ö ‡∂±‡∑ê‡∑Ñ‡∑ê")
        return

    try:
        chat.kick_member(user_id)
        message.reply_text("Banned!")
    except BadRequest as excp:
        if excp.message == "‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂¥‡∂´‡∑í‡∑Ä‡∑í‡∂©‡∂∫ ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫":
            # Do not reply
            message.reply_text('Banned!', quote=False)
        elif excp.message in RBAN_ERRORS:
            message.reply_text(excp.message)
        else:
            LOGGER.warning(update)
            LOGGER.exception("‡∂Ø‡∑ù‡∑Ç‡∂∫ ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ user %s ‡∂≠‡∑î‡∂Ω chat %s (%s) due to %s", user_id, chat.title, chat.id,
                             excp.message)
            message.reply_text("‡∑Ñ‡∑ú‡∂≥‡∂∫‡∑í, ‡∂∏‡∂ß ‡∂ë‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.")

@run_async
@bot_admin
def runban(bot: Bot, update: Update, args: List[str]):
    message = update.effective_message

    if not args:
        message.reply_text("‡∂î‡∂∂ ‡∂∫‡∑ú‡∂∏‡∑î ‡∂Ø‡∂ö‡∑ä‡∑Ä‡∂±‡∑ä‡∂±‡∑ö chat/user.")
        return

    user_id, chat_id = extract_user_and_text(message, args)

    if not user_id:
        message.reply_text("‡∂î‡∂∂ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∑Ä‡∑ô‡∂≠ ‡∂∫‡∑ú‡∂∏‡∑î ‡∑Ä‡∂± ‡∂∂‡∑Ä‡∂ö‡∑ä ‡∂±‡∑ú‡∂¥‡∑ô‡∂±‡∑ö.")
        return
    elif not chat_id:
        message.reply_text("‡∂î‡∂∂ ‡∂ö‡∂≠‡∑è‡∂∂‡∑Ñ‡∂ö‡∂ß ‡∂∫‡∑ú‡∂∏‡∑î ‡∑Ä‡∑ñ ‡∂∂‡∑Ä‡∂ö‡∑ä ‡∂±‡∑ú‡∂¥‡∑ô‡∂±‡∑ö.")
        return

    try:
        chat = bot.get_chat(chat_id.split()[0])
    except BadRequest as excp:
        if excp.message == "Chat not found":
            message.reply_text("‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫! ‡∂î‡∂∂ ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂†‡∑ê‡∂ß‡∑ä ‡∑Ñ‡∑ê‡∂≥‡∑î‡∂±‡∑î‡∂∏‡∑ä‡∂¥‡∂≠‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∑Ö ‡∂∂‡∑Ä‡∂ß ‡∑Ä‡∂ú ‡∂∂‡∂Ω‡∑è ‡∂ú‡∂±‡∑ä‡∂±, ‡∂∏‡∂∏ ‡∂ë‡∂∏ ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø‡∂∫‡∑ö ‡∂ö‡∑ú‡∂ß‡∑É‡∂ö‡∑ä ‡∑Ä‡∑ô‡∂∏‡∑í.")
            return
        else:
            raise

    if chat.type == 'private':
        message.reply_text("‡∂∏‡∂ß ‡∂ö‡∂´‡∂ú‡∑è‡∂ß‡∑î‡∂∫‡∑í, ‡∂±‡∂∏‡∑î‡∂≠‡∑ä ‡∂ë‡∂∫ ‡∂¥‡∑û‡∂Ø‡∑ä‡∂ú‡∂Ω‡∑í‡∂ö ‡∂ö‡∂≠‡∑è‡∂∂‡∑Ñ‡∂ö‡∑í!")
        return

    if not is_bot_admin(chat, bot.id) or not chat.get_member(bot.id).can_restrict_members:
        message.reply_text("‡∂∏‡∂ß ‡∂ë‡∑Ñ‡∑í ‡∂∏‡∑í‡∂±‡∑í‡∑É‡∑î‡∂±‡∑ä‡∑Ä ‡∂¥‡∑è‡∂Ω‡∂±‡∂∫ ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö! ‡∂∏‡∂∏ ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö ‡∂∂‡∑Ä‡∂ß ‡∑Ä‡∂ú ‡∂∂‡∂Ω‡∑è ‡∂ú‡∂±‡∑ä‡∂± ‡∑É‡∑Ñ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑í‡∂±‡∑ä ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂∫.")
        return

    try:
        member = chat.get_member(user_id)
    except BadRequest as excp:
        if excp.message == "User not found":
            message.reply_text("‡∂∏‡∂ß ‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂ë‡∑Ñ‡∑í ‡∑É‡∑í‡∂ß‡∑í‡∂± ‡∂∂‡∑Ä‡∂ö‡∑ä ‡∂±‡∑ú‡∂¥‡∑ô‡∂±‡∑ö")
            return
        else:
            raise
            
    if is_user_in_chat(chat, user_id):
        message.reply_text("‡∂ë‡∂∏ ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø‡∂∫‡∑ö ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä ‡∑É‡∑í‡∂ß‡∑í‡∂± ‡∂Ö‡∂∫‡∑ô‡∂ö‡∑î ‡∂Ø‡∑î‡∂ª‡∑É‡∑ä‡∂Æ‡∑Ä ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂î‡∂∂ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∑ö ‡∂á‡∂∫‡∑í?")
        return

    if user_id == bot.id:
        message.reply_text("‡∂∏‡∂∏ ‡∂∏‡∑è‡∑Ä‡∂∏ ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂∫‡∂±‡∑ä‡∂±‡∑ö ‡∂±‡∑ê‡∑Ñ‡∑ê, ‡∂∏‡∂∏ ‡∂ë‡∑Ñ‡∑í ‡∂¥‡∂ª‡∑í‡∂¥‡∑è‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑ä!")
        return

    try:
        chat.unban_member(user_id)
        message.reply_text("‡∂î‡∑Ä‡∑ä, ‡∂∏‡∑ô‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è‡∂ß ‡∂ë‡∂∏ ‡∂ö‡∂≠‡∑è‡∂∂‡∑Ñ‡∂ß ‡∑É‡∂∏‡∑ä‡∂∂‡∂±‡∑ä‡∂∞ ‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂∫!")
    except BadRequest as excp:
        if excp.message == "‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂¥‡∂´‡∑í‡∑Ä‡∑í‡∂©‡∂∫ ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫":
            # Do not reply
            message.reply_text('Unbanned!', quote=False)
        elif excp.message in RUNBAN_ERRORS:
            message.reply_text(excp.message)
        else:
            LOGGER.warning(update)
            LOGGER.exception("‡∂Ø‡∑ù‡∑Ç‡∂∫ ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ user %s in chat %s (%s) due to %s", user_id, chat.title, chat.id,
                             excp.message)
            message.reply_text("‡∑Ñ‡∑ú‡∂≥‡∂∫‡∑í, ‡∂∏‡∂ß ‡∂ë‡∂∏ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö.")


__help__ = """
 - /kickme: kicks the user who issued the command

*Admin only:*
 - /ban <userhandle>: ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂∫‡∑í. (‡∑Ñ‡∑É‡∑î‡∂ª‡∑î‡∑Ä ‡∑Ñ‡∂ª‡∑Ñ‡∑è, or ‡∂¥‡∑í‡∂Ω‡∑í‡∂≠‡∑î‡∂ª‡∑î)
 - /tban <userhandle> x(m/h/d): x ‡∂ö‡∑è‡∂Ω‡∂∫ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î‡∂ß ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂∫‡∑í. (‡∑Ñ‡∑É‡∑î‡∂ª‡∑î‡∑Ä ‡∑Ñ‡∂ª‡∑Ñ‡∑è, or ‡∂¥‡∑í‡∂Ω‡∑í‡∂≠‡∑î‡∂ª‡∑î). m = minutes, h = hours, d = days.
 - /unban <userhandle>: ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î  ‡∂≠‡∑Ñ‡∂±‡∂∏ ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ .(‡∑Ñ‡∑É‡∑î‡∂ª‡∑î‡∑Ä ‡∑Ñ‡∂ª‡∑Ñ‡∑è, or ‡∂¥‡∑í‡∂Ω‡∑í‡∂≠‡∑î‡∂ª‡∑î)
 - /kick <userhandle>: kicks ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑ä, (‡∑Ñ‡∑É‡∑î‡∂ª‡∑î‡∑Ä ‡∑Ñ‡∂ª‡∑Ñ‡∑è, or ‡∂¥‡∑í‡∂Ω‡∑í‡∂≠‡∑î‡∂ª‡∑î)
"""

__mod_name__ = "Bans"

BAN_HANDLER = CommandHandler("ban", ban, pass_args=True, filters=Filters.group)
TEMPBAN_HANDLER = CommandHandler(["tban", "tempban"], temp_ban, pass_args=True, filters=Filters.group)
KICK_HANDLER = CommandHandler("kick", kick, pass_args=True, filters=Filters.group)
UNBAN_HANDLER = CommandHandler("unban", unban, pass_args=True, filters=Filters.group)
KICKME_HANDLER = DisableAbleCommandHandler("kickme", kickme, filters=Filters.group)
RBAN_HANDLER = CommandHandler("rban", rban, pass_args=True, filters=CustomFilters.sudo_filter)
RUNBAN_HANDLER = CommandHandler("runban", runban, pass_args=True, filters=CustomFilters.sudo_filter)

dispatcher.add_handler(BAN_HANDLER)
dispatcher.add_handler(TEMPBAN_HANDLER)
dispatcher.add_handler(KICK_HANDLER)
dispatcher.add_handler(UNBAN_HANDLER)
dispatcher.add_handler(KICKME_HANDLER)
dispatcher.add_handler(RBAN_HANDLER)
dispatcher.add_handler(RUNBAN_HANDLER)
